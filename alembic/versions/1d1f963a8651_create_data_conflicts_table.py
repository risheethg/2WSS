"""create data conflicts table

Revision ID: 1d1f963a8651
Revises: 3f9f031a0946
Create Date: 2025-10-11 20:35:48.966278

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1d1f963a8651'
down_revision: Union[str, None] = '3f9f031a0946'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_conflicts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conflict_type', sa.String(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('external_system', sa.String(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=False),
    sa.Column('conflict_field', sa.String(), nullable=False),
    sa.Column('conflict_value', sa.String(), nullable=False),
    sa.Column('existing_entity_id', sa.Integer(), nullable=True),
    sa.Column('webhook_event_data', sa.Text(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('resolution_strategy', sa.String(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_by', sa.String(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_conflicts_id'), 'data_conflicts', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_data_conflicts_id'), table_name='data_conflicts')
    op.drop_table('data_conflicts')
    # ### end Alembic commands ###
